# action.yml
---
name: 'EA Tester'
description: 'Runs MQL program'
author: 'kenorb'
inputs:
  BtCurrency:
    description: 'Base currency to use'
    default: 'USD'
  BtDeposit:
    description: 'Deposit amount to use'
    default: 10000
  BtDest:
    description: 'Specifies directory to copy the results'
    default: '${{ github.workspace }}'
  BtDigits:
    description: 'Specifies number of digits after decimal point'
    default: 5
  BtPair:
    description: 'Symbol pair to use'
    default: 'EURUSD'
  BtSpread:
    description: 'Specifies spread to use in points'
  BtTestModel:
    description: 'Specifies type of backtest data being tested'
    default: 0
  BtDays:
    description: 'Specifies range of days in each month to test'
    default: '1-31'
  BtMonths:
    description: 'Specifies range of months in each year to test'
    default: '1'
  BtYears:
    description: 'Specifies year or range of years to test'
    default: '2019'
  MtDest:
    description: 'Destination path to install platform'
    default: '${{ github.workspace }}'
  MtVersion:
    description: 'Version of the platform to install'
    default: '4.0.0.1280'
  OptFormatBrief:
    description: 'Converts report to brief format'
  OptFormatJson:
    description: 'Converts report to JSON format'
  OptOptimize:
    description: 'Runs test in optimization mode'
  OptTrace:
    description: 'Enables trace mode (debug)'
  OptVerbose:
    description: 'Enables verbose mode'
  Script:
    description: 'The name of the script to run'
  SetFile:
    description: 'Specifies SET file to use'
  SetParams:
    description: 'Specifies parameters to optimize'
  TestPeriod:
    description: 'Timeframe to use for the test'
    default: M30
  TestReportName:
    description: 'Specifies the name of the test report file'
    default: 'tester/Report'
  TestExpert:
    description: 'The name of the EA to test'
    # required: true
  TestLimitOpts:
    description: 'Specifies EA limit test parameters'
  RunOnStart:
    description: "Runs command on startup (before the test)"
    default: clean_sources
  RunOnSet:
    description: "Runs command on SET configuration (before the test)"
  RunOnSuccess:
    description: "Runs command after successful test"
  RunOnError:
    description: "Runs command on test errors (including warnings)"
  RunOnExit:
    description: "Runs command on exit (after the test)"
  RunOnFail:
    description: "Runs command after test failure"
  RunOnWarning:
    description: "Runs command on test warnings (excluding errors)"

# outputs:
#  foo: # id of output
#    description: 'Foo'
runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    BT_CURRENCY: ${{ inputs.BtCurrency }}
    BT_DAYS: ${{ inputs.BtDays }}
    BT_DEPOSIT: ${{ inputs.BtDeposit }}
    BT_DEST: ${{ inputs.BtDest }}
    BT_DIGITS: ${{ inputs.BtDigits }}
    BT_MONTHS: ${{ inputs.BtMonths }}
    BT_PERIOD: ${{ inputs.TestPeriod }}
    BT_SPREAD: ${{ inputs.BtSpread }}
    BT_SYMBOL: ${{ inputs.BtPair }}
    BT_TESTMODEL: ${{ inputs.BtTestModel }}
    BT_YEARS: ${{ inputs.BtYears }}
    EA_OPTS: ${{ inputs.TestLimitOpts }}
    OPT_FORMAT_BRIEF: ${{ inputs.OptFormatBrief }}
    OPT_FORMAT_JSON: ${{ inputs.OptFormatJson }}
    OPT_OPTIMIZATION: ${{ inputs.OptOptimize }}
    OPT_TRACE: ${{ inputs.OptTrace }}
    OPT_VERBOSE: ${{ inputs.OptVerbose }}
    RUN_ON_ERROR: ${{ inputs.RunOnError }}
    RUN_ON_EXIT: ${{ inputs.RunOnExit }}
    RUN_ON_FAIL: ${{ inputs.RunOnFail }}
    RUN_ON_SET: ${{ inputs.RunOnSet }}
    RUN_ON_START: ${{ inputs.RunOnStart }}
    RUN_ON_SUCCESS: ${{ inputs.RunOnSuccess }}
    RUN_ON_WARN: ${{ inputs.RunOnWarning }}
    SCRIPT: ${{ inputs.Script }}
    SETFILE: ${{ inputs.SetFile }}
    SET_PARAMS: ${{ inputs.SetParams }}
    TEST_EXPERT: ${{ inputs.TestExpert }}
    TEST_REPORT_NAME: ${{ inputs.TestReportName }}
    WORKDIR: /github/workspace
branding:
  icon: 'bar-chart'
  color: 'green'
