# action.yml
---
author: kenorb
branding:
  icon: bar-chart
  color: green
description: Runs MQL program
inputs:
  BtCurrency:
    description: Base currency to use
    default: USD
  BtDeposit:
    description: Deposit amount to use
    default: 10000
  BtDest:
    description: Specifies directory to copy the results
    default: ${{ github.workspace }}
  BtDigits:
    description: Specifies number of digits after decimal point
    default: 5
  BtPair:
    description: Symbol pair to use
    default: EURUSD
  BtSpread:
    description: Specifies spread to use in points
  BtTestModel:
    description: Specifies type of backtest data being tested
    default: 0
  BtDays:
    description: Specifies range of days in each month to test
    default: 1-31
  BtMonths:
    description: Specifies range of months in each year to test
    default: 1
  BtYears:
    description: Specifies year or range of years to test
    default: 2019
  GitHubApiToken:
    description: Specifies GitHub PAT to increase API limits.
    default:
  MtDest:
    description: Destination path to install platform
    default: "${{ github.workspace }}"
  MtVersion:
    description: Version of the platform to install
    default: 4
  OptFormatBrief:
    description: Converts report to brief format
  OptFormatJson:
    description: Converts report to JSON format
  OptOptimize:
    description: Runs test in optimization mode
  OptTrace:
    description: Enables trace mode (debug)
  OptVerbose:
    description: Enables verbose mode
  Script:
    description: The name of the script to run
  SetFile:
    description: Specifies SET file to use
  SetOpts:
    description: Specifies comma-separated custom params to set for EA
  SetParams:
    description: Specifies parameters to optimize
  TestPeriod:
    description: Timeframe to use for the test
    default: M30
  TestReportName:
    description: Specifies the name of the test report file
    default: tester/Report
  TestExpert:
    description: The name of the EA to test
    # required: true
  TestLimitOpts:
    description: Specifies EA limit test parameters
  RunOnStart:
    description: Runs command on startup (before the test)
    default: clean_sources
  RunOnSet:
    description: Runs command on SET configuration (before the test)
  RunOnSuccess:
    description: Runs command after successful test
  RunOnError:
    description: Runs command on test errors (including warnings)
  RunOnExit:
    description: Runs command on exit (after the test)
  RunOnFail:
    description: Runs command after test failure
  RunOnWarning:
    description: Runs command on test warnings (excluding errors)
name: EA Tester

# outputs:
#  foo: # id of output
#    description: 'Foo'
runs:
  steps:
    - name: Creates playbook
      uses: DamianReeves/write-file-action@v1.3
      with:
        path: ansible/run.yml
        write-mode: overwrite
        contents: |
          ---
          - name: Run test
            hosts: all
            tasks:
              - name: Include main role
                ansible.builtin.import_role:
                  name: ea31337.mt_runner
                vars:
                  metatrader_version: ${{ inputs.MtVersion }}
                  mt_runner_bt_mt5_config:
                    Common:
                      Login:
                      Password:
                      Server: MetaQuotes-Demo
                    Tester:
                      Deposit: 10000
                      ExecutionMode: 0
                      Expert: Advisors\Dummy.ex5
                      FromDate: 2024.01.01
                      Leverage: 1:500
                      Login: 12345
                      Model: 1
                      Report: report.html
                      ReplaceReport: 1
                      ShutdownTerminal: 1
                      Symbol: EURUSD
                      ToDate: 2024.01.11
    - name: Runs playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        configuration: |
          [defaults]
          nocows = false
          stdout_callback = yaml
        directory: ansible
        options: |
          --connection local
          --extra-vars hello=there
          --inventory localhost,
          --verbose
        playbook: run.yml
        requirements: requirements.yml
  using: composite
