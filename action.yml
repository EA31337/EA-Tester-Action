# action.yml
---
author: kenorb
branding:
  icon: bar-chart
  color: green
description: Runs MQL program
inputs:
  Currency:
    default:
    description: Deposit currency to use.
  Expert:
    default:
    description: The name of the EA file to run.
  Login:
    default:
    description: Account number.
  Password:
    default:
    description: Password to the account.
  Period:
    default:
    description: The default timeframe of the chart.
  Server:
    default:
    description: Trade server.
  Script:
    default:
    description: The name of the script to run.
  TestDeposit:
    description: Initial deposit to use for testing.
    default: 10000
  TestExecutionMode:
    default: 0
    description: Trading execution mode.
  TestFromDate:
    default:
    description: The date to start testing (yyyy.mm.dd).
  TestExpert:
    default:
    description: The name of the Expert Advisor file to test.
  TestExpertParameters:
    default:
    description: The name of the SET file with EA parameters.
  TestLeverage:
    default:
    description: Leverage to use for testing/optimization.
  TestModel:
    description: Specifies type of modelling to use.
    default: 1
  TestOptimization:
    default: 0
    description: Specifies testing mode.
  TestOptimizationCriterion:
    default:
    description: Specifies optimization criterion.
  TestPeriod:
    description: Timeframe to use for the test.
  TestReport:
    default:
    description: Specifies the name of the test report file
  TestReplaceReport:
    default:
    description: Specifies whether to enable overwriting of the report file.
  TestScriptParameters:
    default:
    description: The name of the SET file with script parameters.
  TestSpread:
    description: Specifies spread to use in points.
  TestSymbol:
    default: EURUSD
    description: Symbol pair to test.
  TestToDate:
    default:
    description: The date to finish testing (yyyy.mm.dd).
  UrlExpert:
    default: https://github.com/EA31337/EA31337-Libre/releases/download/v1.013/EA31337-Libre-v1.013.ex5
    description: URL of Expert Advisor to download.
  UrlPlatform:
    default: https://download.mql5.com/cdn/web/metaquotes.software.corp/mt5/mt5setup.exe
    description: URL of the platform to install.
  Version:
    default: 5
    description: Version of platform to use.
name: EA Tester

outputs:
  platform_fact:
    description: Platform fact output.
    value: ${{ steps.platform-fact-output.outputs.platform-fact || '{}' }}

runs:
  steps:
    - name: Creates playbook
      uses: DamianReeves/write-file-action@v1.3
      with:
        path: ansible/run.yml
        write-mode: overwrite
        contents: |
          ---
          - name: Run test
            hosts: all
            tasks:
              - name: Include main role
                ansible.builtin.import_role:
                  name: ea31337.mt_runner
                vars:
                  metatrader_setup_url: ${{ inputs.UrlPlatform }}
                  metatrader_version: ${{ inputs.Version }}
                  mt_runner_bt_mt4_config:
                    AutoConfiguration: !!str false
                    DataServer: 127.0.0.1:443
                    EnableDDE: !!str false
                    EnableNews: !!str false
                    Expert: ${{ inputs.Expert }}
                    ExpertParameters: ${{ inputs.TestExpertParameters }}
                    ExpertsDllConfirm: !!str false
                    ExpertsDllImport: !!str true
                    ExpertsEnable: !!str true
                    ExpertsExpImport: !!str true
                    ExpertsTrades: !!str true
                    ExpertsTradesConfirm: false
                    FTPAccount: 12345
                    FTPEnable: !!str false
                    FTPLogin: anonymous
                    FTPPassiveMode: !!str false
                    FTPPassword: anonymous
                    FTPPath: /inetpub
                    FTPPeriod: 10
                    FTPServer: ftp.example.com
                    Login: ${{ inputs.Login }}
                    Password: ${{ inputs.Password }}
                    Period: ${{ inputs.Period }}
                    Profile: default
                    ProxyEnable: !!str false
                    ProxyLogin: user45
                    ProxyPassword: xxx
                    ProxyServer: example.com:3128
                    ProxyType: HTTP
                    Script: ${{ inputs.Script }}
                    ScriptParameters:
                    Server: ${{ inputs.Server }}
                    Symbol: ${{ inputs.TestSymbol }}
                    Template:  # popular.tpl
                    TestDateEnable: !!str true
                    TestExpert: ${{ inputs.TestExpert }}
                    TestExpertParameters: ${{ inputs.TestExpertParameters }}
                    TestFromDate: ${{ inputs.TestFromDate }}
                    TestModel: ${{ inputs.TestModel }}
                    TestOptimization: ${{ inputs.TestOptimization }}
                    TestPeriod: ${{ inputs.TestPeriod }}
                    TestReplaceReport: ${{ inputs.TestReplaceReport }}
                    TestReport: ${{ inputs.TestReport }}
                    TestShutdownTerminal: !!str true
                    TestSpread: 10
                    TestSymbol: ${{ inputs.TestSymbol }}
                    TestToDate: ${{ inputs.TestToDate }}
                    TestVisualEnable: !!str false
                  mt_runner_bt_mt5_config:
                    Common:
                      Login: ${{ inputs.Login }}
                      Password: ${{ inputs.Password }}
                      Server: ${{ inputs.Server }}
                    StartUp:
                      Expert: ${{ inputs.Expert }}
                      ExpertParameters: ${{ inputs.TestExpertParameters }}
                      Period: ${{ inputs.Period }}
                      Script: ${{ inputs.Script }}
                      ScriptParameters: ${{ inputs.TestScriptParameters }}
                      Symbol: ${{ inputs.TestSymbol }}
                      Template:
                    Tester:
                      Deposit: ${{ inputs.TestDeposit }}
                      ExecutionMode: ${{ inputs.TestExecutionMode }}
                      Expert: ${{ inputs.TestExpert }}
                      ExpertParameters: ${{ inputs.TestExpertParameters }}
                      ForwardDate:
                      ForwardMode: 0
                      FromDate: ${{ inputs.TestFromDate }}
                      Leverage: ${{ inputs.TestLeverage }}
                      Login: ${{ inputs.Login }}
                      Model: ${{ inputs.TestModel }}
                      Optimizaton: ${{ inputs.TestOptimization }}
                      OptimizationCriterion: ${{ inputs.TestOptimizationCriterion }}
                      Period: ${{ inputs.TestPeriod }}
                      Report: ${{ inputs.TestReport }}
                      ReplaceReport: ${{ inputs.TestReplaceReport }}
                      ShutdownTerminal: 1
                      Symbol: ${{ inputs.TestSymbol }}
                      ToDate: ${{ inputs.TestToDate }}
                      Visual: 0
                  mt_runner_get_url_list:
                    - dest: "{{ mt_runner_mt_path }}/MQL${{ inputs.Version }}/Experts"
                      url: "${{ inputs.UrlExpert }}"
                  mt_runner_timeout: 240
    - name: Creates requirements
      uses: DamianReeves/write-file-action@v1.3
      with:
        path: ansible/requirements.yml
        write-mode: overwrite
        contents: |
          ---
          roles:
            - name: ea31337.mt_runner
              scm: git
              src: https://github.com/EA31337/ansible-role-mt-runner.git
              version: dev
    - name: Runs playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        configuration: |
          [defaults]
          nocows = false
          stdout_callback = yaml
        directory: ansible
        options: |
          --connection local
          --inventory localhost,
          --verbose
        playbook: run.yml
        requirements: requirements.yml
    - id: platform-fact-output
      name: Sets platform fact output
      env:
        MT_VERSION: "${{ inputs.Version }}"
      run: |
        import json, os
        try:
          with open("/etc/ansible/facts.d/metatrader.fact", "r") as file:
            fact_obj = json.load(file)
        except FileNotFoundError:
          print("Error: Fact file not found.")
        # Serialize the data back into a JSON string.
        fact_plain = json.dumps(fact_obj)
        try:
          with open(os.getenv("GITHUB_OUTPUT"), "a") as file_out:
            file_out.write(f"platform-fact={fact_plain}\n")
            print(f"platform-fact={fact_plain}\n")
        except FileNotFoundError:
          print("Error: Output file not found.")
      shell: python
  using: composite
